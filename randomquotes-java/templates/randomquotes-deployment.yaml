kind: Deployment
apiVersion: apps/v1
metadata:
  name: randomquotes
  labels:
    app: randomquotes
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: randomquotes
  template:
    metadata:
      labels:
        app: randomquotes
        deployment: randomquotes
    spec:
      {{ if .Values.saEnable}}
      serviceAccountName: {{ .Values.serviceAccountName }}
      automountServiceAccountToken: false
      {{ end }}
      containers:
        - name: randomquotes
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: 8080
              protocol: TCP
          imagePullPolicy: {{ .Values.image.pullPolicy }}
{{ if .Values.enabledDB }}
          env: 
           - name: POSTGRES_URL
             valueFrom:
               configMapKeyRef:
                 name: randomquotes-cm
                 key: POSTGRES_URL
           - name: POSTGRES_USER
             valueFrom:
               secretKeyRef:
                 name: randomquotes-secret
                 key: POSTGRES_USER
           - name: POSTGRES_PASS
             valueFrom:
               secretKeyRef:
                 name: randomquotes-secret
                 key: POSTGRES_PASS
{{end}}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
